@using Domain.Models
@using Microsoft.AspNetCore.Components.Forms

<MudContainer Class="d-flex justify-center mb-2 px-2" Style="height: calc(100vh - 100px); max-width: unset !important">
	<MudItem xs="12" sm="8" md="6" lg="4" xl="3">
		<MudPaper Elevation="2" Class="d-flex flex-column gap-2 align-center relative" Style="height: 100%;">
            <MudGrid>
                <MudItem Class="relative d-flex flex-column" xs="12">
                    <MudFileUpload Class="d-flex justify-center file-upload" T="IBrowserFile" Accept="*" @bind-File="selectedCoverPhoto" FilesChanged="UploadCover" Style="width: 100%;">
		                <ActivatorContent>
                            <MudBadge BadgeClass="mt-n5 ml-n4 badge-edit" Icon="@Icons.Material.Filled.CameraAlt" Origin="Origin.BottomRight" Overlap Bordered>
                                <MudImage Class="cover-photo rounded-lg" Elevation="1" Src="@Profile.CoverPhoto" Height="150"></MudImage>
                            </MudBadge>
                        </ActivatorContent>
                    </MudFileUpload>
                        <MudFileUpload Class="d-flex justify-center absolute profile-container" T="IBrowserFile" Accept="*" @bind-File="selectedProfile" FilesChanged="UploadProfilePicture">
                            <ActivatorContent>
                                <MudBadge BadgeClass="mt-n5 ml-n4 badge-edit" Icon="@Icons.Material.Filled.CameraAlt" Origin="Origin.BottomRight" Overlap Bordered>
                                    <MudAvatar Size="Size.Large" Class="profile position-relative" Variant="Variant.Filled" Style="border : 1px solid #d3d3d3;">
                                        <MudImage Src="@Profile.Photo"></MudImage>
                                    </MudAvatar>
                                </MudBadge>
                            </ActivatorContent>
                        </MudFileUpload>
                </MudItem>

                <MudItem Class="flex-grow-1" xs="12">
                    <MudStack Class="pa-2" Justify="Justify.Center" Spacing="2" Style="width: 100%;">

                        <MudStack Class="pl-3">

                            <MudText Typo="Typo.h6">@(string.IsNullOrEmpty(Profile.FullName) ? CurrentFullname : Profile.FullName)</MudText>
                            <small style="color: blue">@Profile.MyOrganization?.OrganizationName</small>

                        </MudStack>
                        <MudDivider />

                        <MudStack AlignItems="AlignItems.Center" Row>
                            <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small"></MudIcon>
                            <small>@(string.IsNullOrEmpty(Profile.Address) ? "Address not found" : Profile.Address)</small>
                        </MudStack>
                        <MudStack AlignItems="AlignItems.Center" Row>
                            <MudIcon Icon="@Icons.Material.Filled.Warehouse" Size="Size.Small"></MudIcon>
                            <small>@(string.IsNullOrEmpty(Profile.Course) ? "Course not found" : Profile.Course)</small>
                        </MudStack>

                    </MudStack>
                </MudItem>
                
                <MudItem Class="absolute d-flex justify-center width-100p mb-2" xs="12" Style="bottom: 0;">
                    <MudButton Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary">Edit Profile</MudButton>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudItem>
</MudContainer>


@code {
    private IBrowserFile? selectedCoverPhoto;
    private IBrowserFile? selectedProfile;

    [Parameter] public ProfileInfo Profile { get; set; } = new();
    [Parameter] public EventCallback<ProfileInfo> OnProfileChanged { get; set; }
    [Parameter] public string Email { get; set; } = string.Empty;
    [Parameter] public bool IsView { get; set; }
    [Parameter] public string CurrentFullname { get; set; } = string.Empty;

    private async Task UploadCover(IBrowserFile file)
    {
        selectedCoverPhoto = file;
        if (selectedCoverPhoto != null)
        {
            using (MemoryStream memoryStream = new MemoryStream())
            {
                await selectedCoverPhoto.OpenReadStream(209715200).CopyToAsync(memoryStream);

                Profile.CoverPicture = memoryStream.ToArray();

                await OnProfileChanged.InvokeAsync(Profile);

                StateHasChanged();
            }
        }
    }

    private async Task UploadProfilePicture(IBrowserFile file)
    {
        selectedProfile = file;
        if (selectedProfile != null)
        {
            using (MemoryStream memoryStream = new MemoryStream())
            {
                await selectedProfile.OpenReadStream(209715200).CopyToAsync(memoryStream);

                Profile.ProfilePicture = memoryStream.ToArray();

                await OnProfileChanged.InvokeAsync(Profile);

                StateHasChanged();
            }
        }
    }
    public async Task ChangePicture ()
    {
        
    }
    // private void OnSave()
    // {
    //     OnProfileChanged.InvokeAsync(Profile);
    // }

}
<style>
    .profile.mud-avatar.mud-avatar-large {
        height: 120px;
        width: 120px;
        border: 1px solid white;
    }

    .cover-photo {
        width: 100%;
        object-fit:cover;
    }

    .badge-edit.mud-badge.mud-badge-bottom.right.mud-badge-overlap {
        height: 23px;
        width: 23px;
    }

    .badge-edit .mud-badge.mud-badge-icon .mud-icon-badge {
        font-size: 16px;
    }

    .file-upload .mud-badge-root {
        width: 100%;
        cursor: pointer;
    }

    .profile-container {
        bottom: -25px;
        left: 30px;
    }
</style>